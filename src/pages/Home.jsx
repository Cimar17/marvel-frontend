// src/pages/Home.jsx
// =====================================================================================
// PAGE D‚ÄôACCUEIL
// - Section HERO avec th√®me par d√©faut (Rocket)
// - Image de fond + gradient sombre (lisibilit√© du texte)
// - Titre + sous-titre dynamiques (selon le th√®me)
// - Boutons CTA (Signup / Login) ou Se d√©connecter si connect√©
// - Indicateur de scroll (visuel Rocket en bas de l‚Äô√©cran)
// =====================================================================================

import { Link } from "react-router-dom";
import "./Home.css";

// üé® Th√®me par d√©faut ‚Üí utilis√© si aucun th√®me n‚Äôest fourni en props
const DEFAULT_THEME = {
  name: "Rocket", // Nom affich√© (utile dans aria-label)
  heroImage: "/rocket.jpg", // Image de fond (plac√©e dans /public)
  title: "Welcome to your Marvelous World", // Titre principal
  description:
    "Ajoute tes personnages et comics pr√©f√©r√©s en favoris et construis ton propre univers Marvel.", // Texte descriptif
  titleGlow: "0 0 24px rgba(20, 209, 255, .55)", // Effet lumineux sur le titre
};

// üîÅ Ajout de 2 props :
// - userToken ‚Üí savoir si l‚Äôutilisateur est connect√© ou non
// - onLogout  ‚Üí fonction √† appeler pour se d√©connecter (supprime le token)
const Home = ({ theme = DEFAULT_THEME, userToken, onLogout }) => {
  return (
    <main className="home">
      {/* ------------------------------------------------------------------
          HERO (banni√®re principale)
          - backgroundImage combine : un d√©grad√© sombre + l‚Äôimage du th√®me
          - aria-label : description utile pour accessibilit√©
          ------------------------------------------------------------------ */}
      <section
        className="hero"
        style={{
          backgroundImage: `
            linear-gradient(
              to right,
              rgba(10,14,24,.85) 0%,
              rgba(10,14,24,.55) 35%,
              rgba(10,14,24,.15) 65%,
              rgba(10,14,24,0) 100%
            ),
            url("${theme.heroImage}")
          `,
        }}
        aria-label={`${theme.name} featured`}
      >
        <div className="hero-content">
          {/* üè∑Ô∏è Titre principal (effet lumineux appliqu√© via theme.titleGlow) */}
          <h1 className="hero-title" style={{ textShadow: theme.titleGlow }}>
            {theme.title}
          </h1>

          {/* üìù Sous-titre / description */}
          <p className="hero-subtitle">{theme.description}</p>

          {/* CTA (Call To Action) ‚Üí zone des boutons principaux */}
          <div className="cta-row">
            {userToken ? (
              // ‚úÖ Cas 1 : si userToken existe ‚Üí l‚Äôutilisateur est connect√©
              // Donc on lui montre :
              // - un bouton "Se d√©connecter" (qui appelle onLogout quand on clique)
              // - un raccourci direct vers la page "Personnages"
              <>
                <button
                  type="button"
                  className="btn btn-gradient"
                  onClick={onLogout} // üî¥ quand on clique ‚Üí d√©connexion
                >
                  {" "}
                  Se d√©connecter
                </button>
                <Link to="/characters" className="btn btn-outline">
                  {" "}
                  Voir les personnages
                </Link>
              </>
            ) : (
              // ‚ùå Cas 2 : si userToken n‚Äôexiste pas ‚Üí utilisateur non connect√©
              // Donc on lui propose seulement de s‚Äôinscrire ou de se connecter
              <>
                <Link to="/signup" className="btn btn-gradient">
                  Signup
                </Link>
                <Link to="/login" className="btn btn-outline">
                  Login
                </Link>
              </>
            )}
          </div>
        </div>
      </section>
    </main>
  );
};

export default Home;
